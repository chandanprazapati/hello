import Image from "next/image";
import { useEffect, useRef, useState } from "react";
import { useReactToPrint } from "react-to-print";
import { AiOutlineDownload } from "react-icons/ai";
import "nepali-datepicker-reactjs/dist/index.css";
import BikramSambat from "bikram-sambat-js";
import { yojana } from "../../../services/apiServices/planning/yojana/yojanaService";
import { getSamjhautaGaridineReport } from "../../../services/apiServices/planning/report/reportService";
import { toast } from "react-toastify";
import { englishToNepali } from "../../../utils/utility";
import PlanningHeaderReport from "../../reusableDesign/PlanningHeaderReport";

const YojanaSamjhauta = () => {
  const aa = new BikramSambat(new Date()).toBS();
  const componentRef = useRef();
  const handlePrint = useReactToPrint({
    content: () => componentRef.current,
  });



  // for yojanaNameId
  const [yojanaNameId, setYojanaNameId] = useState([]);
  const [yojanaNameValue, setYojanaNameValue] = useState("");

  const handleYojanaName = (e) => {
    setYojanaNameValue(e.target.value);
  };
  useEffect(() => {
    let yojanaNameApiData = () => {
      yojana().then((response) => {
        try {
          response.status === true;

          {
            setYojanaNameId(response.data);
          }
        } catch (error) {}
      });
    };

    yojanaNameApiData();
  }, []);

  //   for genrate receipt according to id

  const [apiData, setApiData] = useState([]);
  useEffect(() => {
    if (yojanaNameValue) {
      let receiptApiData = () => {
        getSamjhautaGaridineReport(yojanaNameValue).then((response) => {
          try {
            response.status === true;
            {
              setApiData(response.data);
              setLoading(false);
            }
          } catch (error) {
            toast.success("Fetched Data", {
              icon: "üöÄ",
              autoClose: 1000,
            });
          }
        });
      };
      receiptApiData();
    }
  }, [yojanaNameValue]);

  return (
    <>
      <form className="grid lg:grid-cols-2  gap-5 px-5 pt-10 border border-black border-dashed shadow-2xl bg-gray-100  ">
        <div className="font-bold text-lg text-red-600">
          ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§∏‡§Æ‡•ç‡§ù‡•å‡§§‡§æ ‡§ó‡§∞‡§ø‡§¶‡§ø‡§®‡•á‡§ï‡•ã ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§∏‡§ø‡§∞‡•ç‡§ú‡§®‡§æ ‡§ó‡§∞‡•ç‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ï‡•ã ‡§®‡§æ‡§Æ ‡§õ‡§æ‡§®‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç ||
        </div>
        <div className="relative z-0 w-full mb-6 group">
          <label className="label text-blue-900 ">‡§Ø‡•ã‡§ú‡§®‡§æ‡§ï‡•ã ‡§®‡§æ‡§Æ</label>
          <select
            onChange={handleYojanaName}
            value={yojanaNameValue}
            className="peer"
            required
          >
            <option value={""} selected disabled>
              ---- ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ï‡•ã ‡§®‡§æ‡§Æ ‡§õ‡§æ‡§®‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç ----
            </option>

            {yojanaNameId.map((items, index) => {
              return (
                <option key={index} value={items?.yojanaSetupId}>
                  {items.yojanaName}
                </option>
              );
            })}
          </select>
        </div>
      </form>
      <div className="flex-col pt-4 bg-[#F0F1F5] px-3 ">
        <div
          className="flex flex-col xl:flex-row my-10 gap-8"
          ref={componentRef}
        >
          <div className="bg-[url('https://res.cloudinary.com/dg1opyudu/image/upload/v1684819916/1_ga21iq.jpg')] rounded-xl p-5 w-full ">
            <div className="flex justify-between pb-10  ">
              <div>
                <Image
                  src="https://res.cloudinary.com/dg1opyudu/image/upload/v1678796501/SDIMS/Emblem_of_Nepal_c3mw8w.png"
                  height={120}
                  width={120}
                  alt="nagarpalika logo"
                  priority
                />
              </div>
              <div>
                <PlanningHeaderReport/>
              </div>
              <div className="text-xl font-bold pt-20">
                ‡§Æ‡§ø‡§§‡§ø : {englishToNepali(aa)}
              </div>
            </div>

            <div className="font-bold ">
              <div>‡§Ü‡§¶‡•á‡§∂ ‡§®‡§Ç: </div>
            </div>

            <div className="text-2xl font-bold flex justify-center">
              ‡§µ‡§ø‡§∑‡§Ø: ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§∏‡§Æ‡§ø‡§§‡§ø ‡§ó‡§†‡§® ‡§ó‡§∞‡•á‡§ï‡•ã ‡§™‡•ç‡§∞‡§§‡•Ä‡§¨‡•á‡§¶‡§® ‡§™‡•á‡§∂ ‡§ó‡§∞‡•á‡§ï‡•ã ‡§∏‡§Æ‡•ç‡§¨‡§®‡•ç‡§ß‡§Æ‡§æ‡•§
            </div>
            <div className="py-10 px-10 ">
              <div className="text-justify tracking-normal leading-loose ">
                ‡§Ø‡§∏ ‡§¨‡§æ‡§ó‡•ç‡§≤‡•Å‡§Ç‡§ó ‡§®‡§ó‡§∞‡§™‡§æ‡§≤‡§ø‡§ï‡§æ ‡§ï‡•ã ‡§ó‡§æ‡§â‡§Å‡§∏‡§≠‡§æ‡§¨‡§æ‡§ü ‡§ö‡§æ‡§≤‡•Ç ‡§Ü.‡§¨.
                {apiData.fiscalYearName ? (
                  <span className="font-bold px-1 ">
                    {" "}
                    {apiData.fiscalYearName}{" "}
                  </span>
                ) : (
                  "......................."
                )}{" "}
                ‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§∏‡•ç‡§µ‡•Ä‡§ï‡•É‡§§ ‡§≠‡§è‡§ï‡•ã ‡§Ø‡§∏ ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§ï‡•ã ‡§µ‡§°‡§æ ‡§®‡§Ç.{" "}
                {apiData.wardId ? (
                  <span className="font-bold px-1 ">
                    {" "}
                    {englishToNepali(apiData.wardId)}{" "}
                  </span>
                ) : (
                  "......................."
                )}{" "}
                ‡§Æ‡§æ
                {apiData.yojanaName ? (
                  <span className="font-bold px-1 ">
                    {" "}
                    {apiData.yojanaName}{" "}
                  </span>
                ) : (
                  "......................."
                )}{" "}
                ‡§Ü‡§Ø‡•ã‡§ú‡§®‡§æ/‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§ï‡•ç‡§∞‡§Æ ‡§õ‡§®‡•å‡§ü ‡§≠‡§à ‡§∏‡•ã ‡§Ü‡§Ø‡•ã‡§ú‡§®‡§æ/‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§ï‡•ç‡§∞‡§Æ‡§ï‡•ã ‡§≤‡§æ‡§ó‡§ø ‡§∞‡•Å
                {apiData.estimatedAmount ? (
                  <span className="font-bold px-1 ">
                    {" "}
                    {englishToNepali(apiData.estimatedAmount)} /-{" "}
                  </span>
                ) : (
                  "......................."
                )}{" "}
                ‡§µ‡§ú‡•á‡§ü ‡§µ‡§ø‡§®‡§ø‡§Ø‡•ã‡§ú‡§® ‡§≠‡§à ‡§∏‡§ï‡•á‡§ï‡•ã ‡§∞ ‡§®‡§ø‡§Ø‡§Æ‡§æ‡§®‡•Å‡§∏‡§æ‡§∞ ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§∏‡§Æ‡§ø‡§§‡§ø ‡§ó‡§†‡§® ‡§≠‡§à ‡§∏‡•ã‡§ï‡•ã
                ‡§™‡•ç‡§∞‡§§‡§ø‡§µ‡•á‡§¶‡§® ‡§ó‡§æ‡§â‡§Å‡§™‡§æ‡§≤‡§ø‡§ï‡§æ‡§Æ‡§æ ‡§™‡•á‡§∂ ‡§≠‡•à‡§∏‡§ï‡•á‡§ï‡•ã‡§≤‡•á ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§∏‡§Æ‡§ø‡§§‡§ø‡§ï‡•ã ‡§Ö‡§ß‡•ç‡§Ø‡§ï‡•ç‡§∑
                ‡§∂‡•ç‡§∞‡•Ä ................. ‡§≤‡§æ‡§à ‡§∏‡§Æ‡•ç‡§ù‡•å‡§§‡§æ ‡§ó‡§∞‡•ç‡§® ‡§™‡§†‡§æ‡§à‡§è‡§ï‡•ã ‡§õ ‡•§ ‡§®‡§ø‡§Ø‡§Æ‡§æ‡§®‡•Å‡§∏‡§æ‡§∞
                ‡§∏‡§Æ‡•ç‡§ù‡•å‡§§‡§æ ‡§ó‡§∞‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§¶‡•á‡§∂ ‡§¶‡§ø‡§®‡•Å ‡§π‡•Å‡§® ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß ‡§õ ‡•§
              </div>
            </div>

            <div className="flex flex-col leading-loose items-end px-10 ">
              <text> ‡§π‡§∏‡•ç‡§§‡§æ‡§ï‡•ç‡§∑‡§∞ : ................................... </text>
              <text> ‡§®‡§æ‡§Æ: : ................................... </text>
              <text className="px-10 "> (‡§µ‡§°‡§æ ‡§Ö‡§ß‡•ç‡§Ø‡§ï‡•ç‡§∑)</text>
            </div>
          </div>

          <br />
        </div>

        <div className="flex justify-end">
          <button
            className="flex justify-end items-center bg-white rounded-xl p-3 gap-2"
            onClick={handlePrint}
          >
            <AiOutlineDownload size={20} />
            Download
          </button>
        </div>
        <br />
      </div>
    </>
  );
};

export default YojanaSamjhauta;
