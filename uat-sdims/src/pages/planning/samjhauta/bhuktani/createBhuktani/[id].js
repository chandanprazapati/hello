import React, { useEffect, useState } from "react";
import ViewPage from "../../../../../components/viewPage/ViewPage";
import { useForm } from "react-hook-form";
import AddButton from "../../../../../components/reusableDesign/AddButton";
import { FaPlus } from "react-icons/fa";
import CommonHeaderDesign from "../../../../../components/reusableDesign/CommonHeaderDesign";
import { bhuktaniType } from "../../../../../services/apiServices/planning/bhuktaniType/bhuktaniTypeService";
import { fiscal } from "../../../../../services/apiServices/common/fiscal/fiscalService";
import { bhuktaniTypeForSamjhautaValidateResolver } from "../../../../../utils/validateField";
import { NepaliDatePicker } from "nepali-datepicker-reactjs";
const aa = new BikramSambat(new Date()).toBS();
import BikramSambat from "bikram-sambat-js";
import { Checkbox, FormControlLabel } from "@mui/material";
import { createPlanningBhuktani } from "../../../../../services/apiServices/planning/planningSamjhauta/planningSamjhautaService";
const BS = require("bikram-sambat-js");
export default function Index({ clickedIdData }) {
  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
    setValue,
  } = useForm({
    resover: bhuktaniTypeForSamjhautaValidateResolver,
  });

  const onSubmit = async (data) => {
    data = {
      ...data,
      samjhautaDate : samjhautaDate,
    };
    try {
      const response = await createPlanningBhuktani(data);
      if (response.status === true) {
        toast.success(response.message, {
          icon: "üöÄ",
          autoClose: 1000,
        });
        router.push("/common/fiscal");
      }
    } catch (error) {
      console.error(error);
    }
  };

  // for bhuktani type
  const [bhuktaniTypeData, setBhuktaniTypeData] = useState([]);
  useEffect(() => {
    const fetchData = async () => {

      try {
        const response = await bhuktaniType();
        if (response.status === true) {
          setBhuktaniTypeData(response.data);
        }
      } catch (error) {
        console.error(error);
      }
    };

    fetchData();
  }, []);

  const bhuktaniOptions = bhuktaniTypeData.map((item) => {
    return (
      <option
        value={item.bhuktaniTypeId}
        key={item.bhuktaniTypeId}
        selected={item.bhuktaniTypeId === clickedIdData?.planningBhuktaniId}
      >
        {item.bhuktaniTypeName}
      </option>
    );
  });

  // for previous fiscal year
  const [fiscalData, setFiscalData] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fiscal();
        if (response.status === true) {
          setFiscalData(response.data);
        }
      } catch (error) {
        console.error(error);
      }
    };

    fetchData();
  }, []);

  const fiscalOptions = fiscalData.map((item) => {
    return (
      <option
        value={item.id}
        key={item.id}
        selected={item.id === clickedIdData?.fiscalYearId}
      >
        {item.name}
      </option>
    );
  });

  // for date picker
  const [samjhautaDate, setSamjhautaDate] = useState(aa);
  // for setting the values of start date and end date
  useEffect(() => {
    if (clickedIdData) {
      setDateFrom(clickedIdData.samjhautaDate || aa);
    }
  }, [clickedIdData]);

  return (
    <React.Fragment>
      <CommonHeaderDesign title={"‡§∞‡§ï‡§Æ ‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä ‡§´‡§æ‡§∞‡§Æ ‡§µ‡§ø‡§µ‡§∞‡§£"} />
      <form onSubmit={handleSubmit(onSubmit)}>
        <div className="bg-[#4189c3] text-center text-2xl py-3 rounded-xl font-bold ">
          ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§µ‡§ø‡§µ‡§∞‡§£
        </div>
        <div className="grid lg:grid-cols-4  gap-5 px-5 pt-10 border border-black border-dashed shadow-2xl bg-gray-100  ">
          <div className="relative z-0 w-full mb-6 group">
            <label className="label text-blue-900 ">‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ </label>
            <select {...register("planningBhuktaniId")} className="peer">
              <option value={""}>--- ‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡§Ø‡§® ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç ---</option>
              {bhuktaniOptions}
            </select>
            <p> {errors?.planningBhuktaniId?.message}</p>
          </div>
          <div className="relative z-0 w-full mb-6 group">
            <label className="label text-blue-900 ">‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§µ‡§∞‡•ç‡§∑ </label>
            <select {...register("fiscalYearId")} className="peer">
              <option value={""}>--- ‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§µ‡§∞‡•ç‡§∑ ‡§ö‡§Ø‡§® ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç ---</option>
              {fiscalOptions}
            </select>
            <p> {errors?.fiscalYearId?.message}</p>
          </div>

          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("aayojana_Karyakram")}
              placeholder="."
            />
            <label className="label">‡§Ø‡•ã‡§ú‡§®‡§æ / ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ</label>
          </div>

          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("aayojana_Karyakram")}
              placeholder="."
            />
            <label className="label">‡§µ‡§ú‡•á‡§ü ‡§∂‡§ø‡§∞‡•ç‡§∑‡§ï</label>
          </div>

          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("aayojana_Karyakram")}
              placeholder="."
            />
            <label className="label">‡§µ‡§ú‡•á‡§ü ‡§∂‡§ø‡§∞‡•ç‡§∑‡§ï ‡§®‡§Ç.</label>
          </div>

          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("nirman_Upabhokta")}
              placeholder="."
            />
            <label className="label">‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§∏‡§Æ‡§ø‡§§‡§ø</label>
          </div>

          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("adakshyaName")}
              placeholder="."
            />
            <label className="label">‡§Ö‡§ß‡•ç‡§Ø‡§ï‡•ç‡§∑‡§ï‡•ã ‡§®‡§æ‡§Æ</label>
          </div>

          <div className="relative  w-full mb-6 group">
            <label
              htmlFor=""
              className=" absolute text-[10px] text-blue-900 -top-[15%]"
            >
              ‡§∏‡§Æ‡•ç‡§ù‡•ã‡•á‡§§‡§æ ‡§Æ‡§ø‡§§‡§ø (BS)
            </label>
            <NepaliDatePicker
              value={samjhautaDate}
              className="peer"
              onChange={(e) => setSamjhautaDate(e)}
              options={{ calenderLocale: "ne", valueLocale: "en" }}
            />
          </div>
        </div>
        <div className="bg-[#4189c3] text-center text-2xl py-3 rounded-xl font-bold ">
          ‡§Ü‡§Ø‡•ã‡§ú‡§®‡§æ‡§ï‡•ã ‡§µ‡§ø‡§µ‡§∞‡§£
        </div>
        <div className="grid lg:grid-cols-4  gap-5 px-5 pt-10 border border-black border-dashed shadow-2xl bg-gray-100  ">
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("kul_La_Ie")}
              placeholder="."
            />
            <label className="label">‡§ï‡•Å‡§≤ ‡§≤.‡§à.</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("naPa_Binayajit")}
              placeholder="."
            />
            <label className="label">‡§®.‡§™‡§æ.‡§µ‡§ø‡§®‡§ø‡§Ø‡•ã‡§ú‡§ø‡§§</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("running_Bhuktani")}
              placeholder="."
            />
            <label className="label">‡§∞‡§®‡§ø‡§ô ‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("jana_Sahabagita")}
              placeholder="."
            />
            <label className="label">‡§ú‡§® ‡§∏‡§π‡§≠‡§æ‡§ó‡§ø‡§§‡§æ</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("kantigenci")}
              placeholder="."
            />
            <label className="label">‡§ï‡§®‡•ç‡§ü‡•á‡§®‡•ç‡§ú‡•á‡§®‡•ç‡§∏‡•Ä ( ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("marmatShmar")}
              placeholder="."
            />
            <label className="label">‡§Æ‡§∞‡•ç‡§Æ‡§§ ‡§∏‡§Æ‡•ç‡§≠‡§æ‡§∞ ( ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("peski")}
              placeholder="."
            />
            <label className="label">‡§™‡•á‡§∂‡•ç‡§ï‡•Ä ‡§∞‡§ï‡§Æ</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("farchot_Amount")}
              placeholder="."
            />
            <label className="label">‡§´‡§∞‡•ç‡§õ‡•ã‡•á‡§ü ‡§ó‡§∞‡•ç‡§®‡•Å‡§™‡§∞‡•ç‡§®‡•á ‡§™‡•á‡§∂‡•ç‡§ï‡•Ä ‡§∞‡§ï‡§Æ</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("technical_Amount")}
              placeholder="."
            />
            <label className="label">‡§™‡•ç‡§∞‡§æ‡§µ‡§ø‡§ß‡§ø‡§ï ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§ô‡•ç‡§ï‡§®</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("dhuwani")}
              placeholder="."
            />
            <label className="label">‡§ß‡•Å‡§µ‡§æ‡§®‡•Ä ( ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("royality")}
              placeholder="."
            />
            <label className="label">‡§∞‡•ã‡§Ø‡§≤‡•ç‡§ü‡•Ä ( ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("agrim_Shulka")}
              placeholder="."
            />
            <label className="label">‡§Ö‡§ó‡•ç‡§∞‡§ø‡§Æ ‡§Ü‡§Ø ‡§ï‡§∞ ( ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("parishramik")}
              placeholder="."
            />
            <label className="label">‡§™‡§æ‡§∞‡§ø‡§∂‡•ç‡§∞‡§Æ‡§ø‡§ï ‡§ï‡§∞ ( ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("bahal_Kar")}
              placeholder="."
            />
            <label className="label">‡§¨‡§π‡§æ‡§≤ ‡§ï‡§∞ (‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§)</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("katti_Rakam")}
              placeholder="."
            />
            <label className="label">‡§ú‡§Æ‡•ç‡§Æ‡§æ ‡§ï‡§ü‡•ç‡§ü‡•Ä ‡§∞‡§ï‡§Æ</label>
          </div>{" "}
          <div className="relative z-0 w-full mb-6 group">
            <input
              type="string"
              className="peer"
              {...register("remaining_Bhuktani_Amount")}
              placeholder="."
            />
            <label className="label">‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä ‡§∞‡§ï‡§Æ</label>
          </div>
          
          <text className="text-red-600" ><span className="text-xl" >*</span> ‡§è‡§ï ‡§™‡§ü‡§ï ‡§∏‡•ç‡§µ‡§ø‡§ï‡•É‡§§ ‡§ó‡§∞‡§ø‡§è‡§ï‡•ã ‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä ‡§∏‡§ö‡•ç‡§Ø‡§æ‡§â‡§® ‡§Æ‡§ø‡§≤‡•ç‡§¶‡•à‡§® ‡•§</text>
          <FormControlLabel
            className="pl-4"
            {...register("isBhuktaniApproval")}
            control={
              <Checkbox
                color="primary"
                defaultChecked={clickedIdData?.isBhuktaniApproval}
              />
            }
            label="‡§≠‡•Å‡§ï‡•ç‡§§‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ø‡§ï‡•É‡§§ ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏ ?"
          />
        </div>


        <AddButton
          icon={<FaPlus />}
          title={isSubmitting ? "Submitting..." : "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç "}
          disabled={isSubmitting}
        />
      </form>
    </React.Fragment>
  );
}
